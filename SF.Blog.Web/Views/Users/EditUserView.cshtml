@model SF.Blog.Web.Views.Users.EditUserViewModel
@{
}

<div class="card col">
	<h2 class="card-header">Blog user registration</h2>
	<form class="card-text p-3" method="post" asp-controller="Users" asp-action="Edit">
		<div class="alert alert-danger" asp-validation-summary="ModelOnly"></div>
		<div class="row d-none">
			<input class="form-control" asp-for="Id" />
			<input class="form-control" asp-for="Roles" />
		</div>
		<div class="row">
			<label class="form-label" asp-for="Name"></label><br />
			<input class="form-control" asp-for="Name" />
			<span  class="alert-danger small" role="alert" asp-validation-for="Name"></span>
		</div>
		<div class="row">
			<label class="form-label" asp-for="About"></label><br />
			<input class="form-control" asp-for="About" />
			<span  class="alert-danger small" role="alert" asp-validation-for="About"></span>
		</div>
		<div class="row">
			<label class="form-label" asp-for="DateOfBirth"></label><br />
			<input class="form-control" type="date" asp-for="DateOfBirth" />
			<span  class="alert-danger small" role="alert" asp-validation-for="DateOfBirth"></span>
		</div>
		<div class="row mt-3">
			<button class="btn btn-primary" type="submit">
				Update
			</button>
		</div>
			@if (!String.IsNullOrEmpty(Model.Roles))
			{
				<div class="row">
					<label class="card-text">
						Roles:
						<div>
							@foreach(string role in Model.Roles.Split(' ', StringSplitOptions.RemoveEmptyEntries))
							{
								<span class="d-inline p-1 m-1 bg-primary-subtle bg-gradient rounded-pill">@role</span>
							}
						</div>
					</label>
				</div>
			}
	</form>
</div>

@section Scripts{<partial name="_ValidationScriptsPartial" />}
