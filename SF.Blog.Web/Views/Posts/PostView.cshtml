@using SF.Blog.Infrastructure.Data.DTO
@using SF.Blog.Web.Views.Posts
@using SF.Blog.Web.Views.Shared
@model SF.Blog.Infrastructure.Data.Models.PostModel
@{
}

<div class="card col g-1" style="padding: 0">
	<h2 class="card-header">
		@Model.Title
	</h2>
	<div class="card-body">
		<h6 class="card-subtitle text-body-secondary text-end mb-3">
			<span>
				by
			</span> 
			<a
				class="link-body-emphasis d-inline"
				title="@Model.Owner.About"
				href="@Url.Action("Info", "Users", new{ id = Model.OwnerId })"
				>
				@Model.Owner.Name
			</a>
			@if(Model.Modified is not null)
			{
				<span>
					(modified)
				</span> 
				<span>
					@Model.Modified.Value.ToString("dd-MM-yy HH:mm")
				</span> 
			}
			else
			{
				<span>
					@Model.Published.ToString("dd-MM-yy HH:mm")
				</span>
			}
		</h6>
		<p class="card-text">
			@Model.Content
		</p>
	</div>
	<div class="card-footer">
		<div class="row">
			<div class="col-md-9">
				<h6 class="card-subtitle text-body-secondary">
					Tags:
				</h6>
				<ul class="col px-0">
					@foreach(var tagpost in Model.Tags)
					{
						<li class="badge bg-success bg-gradient rounded-pill">
							@tagpost.Tag.Value
						</li>
					}
				</ul>
			</div>
			@if (User.IsInRole("Moderator") || User.IsInRole("Admin"))
			{
				<div class="col-md-3 d-grid gap-2">
					<a 
						class="row btn btn-primary m-1"
						role="button"
						href="@Url.Action("Update", "Posts", new{ id = Model.Id })"
						>
						Edit post
					</a>
					@await Html.PartialAsync("DeletePostView", new DeletePostViewModel(Model.Id, Model.Title))
				</div>
			}
			</div>
	</div>
</div>

@await Html.PartialAsync("AllCommentsView", new AllCommentsViewModel(Model.Comments.OrderBy(c => c.Published).Select(c => new CommentDTO(c.Id, c.ReplyToId, c.Owner.Name, c.Text )).ToList()))

@if (User.Identity.IsAuthenticated)
{
	@await Html.PartialAsync("CreateEditCommentView", new CreateEditCommentViewModel() {Id = Model.Id})
}
